{
    "title": "Understanding BOINC",
    "datetime": "29th Dec 2018",
    "content": "This week, I read more into the BOINC documentation and learnt more about how it works. BOINC has a client and a server. These two things are separate entities that communicate over an RPC. BOINC provides the client software, on which an application will be run on. The application is the one that dictates how to run jobs and produces results. The BOINC client acts like a mediator between the application and the BOINC server:<br/><pre><code>application <-> client <-> server</code></pre>This was an interesting find, because this means that we do not need to create our backend to manage the results from our custom client. The client and server communicate over an RPC, over a common interface.<br/><br/>However, I could not find any documentation fully defining the RPC protocol that they are using. I could only find documentation for sending results back to the server, not receiving new jobs from the server. The only 'documentation' I can find on how to do this is reading C++ source code from <a href='https://github.com/BOINC/boinc'>their GitHub project</a>. I have also looked through their <a href='https://boinc.berkeley.edu/trac/wiki/SoftwareDevelopment'>developer documentation</a> but still cannot find anything defining the protocol. I doubt that there are any other alternatives.<br/><br/><br/>Anyways, since we may not have a backend anymore, I thought about how can web administrators still receive incentives by including the script in their website. The BOINC implementation includes credits which are awarded to members based on how much computational power they contribute. So, each web administrator can create a member account and can configure their JavaScript file to use their account so that the credits are awarded to their account. After that, it is up to the project managers (the ones who provide the research problems to solve) to reward them in their own way.<br/><br/>While researching more about BOINC and its reward methods, I found a video which mentioned using BOINC to get Gridcoins. Gridcoin is a cryptocurrency that is awarded to the users who participate in BOINC under the Gridcoin team. However, I don't think one can make much from Gridcoin as compared to other cryptocurrencies. So, at the end of the day, it's still not preferable based on dollar value.<br/><br/>However, compared to advertisements, this method has an advantage:<br/>Site which requires a lot of reading (such as blogs) or that the user stay on the page for a long time (such as watching videos) will still provide income because the user does not need to click on an advertisement (like Google Ads).<br/><br/><br/>When I realised that all I needed to do was implement the client in JavaScript, I had a feeling that it has already been done. I searched for 'boinc js' and found <a href='https://github.com/dpnemergut/boincjs'>an abandoned GitHub project</a>. Unfortunately for me, there wasn't much that was done, just some boilerplate code, in fact, not much code at all."
}
